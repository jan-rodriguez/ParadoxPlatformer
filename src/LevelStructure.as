package
{
	/* The vision for this class is to use it as the base structure 
		for generating random levels. We can construct basic arrays
		that the WorldGenerator class can use read and fill in with
		random constructs. 
	*/
	import flash.utils.ByteArray;
	public final class LevelStructure
	{
		/*
		 * Empty space = 0
		 * Wall = 1
		 * Player Start = 2
		 * Goal = 3
		 * Obstacle Type = 10-29
		 * 		- right facing turret: 11
		 * 		- left facing turret: 12
		 * 		- up facing turret: 13
		 * 		- down facing turret: 14
		 * Random Obstacle = >30 TODO: add random obstacles
		 */
		
		/*
		 * TODO: Make level reader read more human readable level orientation...
		 */
		public static const DEFAULT:Array = new Array(
			[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
			[1,0,0,0,0,0,0,1,0,0,0,0,0,0,1],
			[1,0,0,0,0,0,1,0,0,0,0,0,0,0,1],
			[1,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
			[1,0,0,0,1,0,0,0,0,0,0,0,0,0,1],
			[10,10,3,3,3,10,10,10,10,10,10,10,10,10,10]); 

		public static const GAPLEVEL:Array = new Array(
			[1,1,1,1,1,1,1,1,1,1,1,1,1,3,1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1],
			[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]		
		);
		
		//Test Level for random levels
		public static const RANDOMTESTLEVEL:Array = new Array(
			[1,1,1,1,1,1,1,1,1,1,1,1,1,3,1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 35, 0, 35, 0, 35, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 34, 0, 34, 0, 34, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 33, 0, 33, 0, 33, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 32, 0, 32, 0, 32, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 31, 0, 31, 0, 31, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1],
			[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]		
		);
		
		public static var BULLETBLOCKTEST:Array = new Array(
			[1,1,1,1,1,1,1,3,1,1,1,1,1,1,1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
		);
		
		public static var FINALLEVEL:Array = new Array(
			[1,1,1,1,1,1,1,3,1,1,1,1,1,1,1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
			[1, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
		);
		public static const ALL_LEVELS:Array = new Array(DEFAULT,GAPLEVEL,/*RANDOMTESTLEVEL,*/ BULLETBLOCKTEST);
		public static var levels:Array = new Array(DEFAULT,GAPLEVEL,/*RANDOMTESTLEVEL,*/ BULLETBLOCKTEST);
		
		public static function getNumLevels():int
		{
			return levels.length;
		}
		
		public function clone(source:Object):* 
		{ 
			var myBA:ByteArray = new ByteArray(); 
			myBA.writeObject(source); 
			myBA.position = 0; 
			return(myBA.readObject()); 
		}
	}
}